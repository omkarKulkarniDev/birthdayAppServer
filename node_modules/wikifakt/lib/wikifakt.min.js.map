{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///wikifakt.min.js","webpack:///webpack/bootstrap 7f77aab856576591a569","webpack:///./src/index.js","webpack:///external \"request\"","webpack:///external \"cheerio\"","webpack:///external \"bluebird\""],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_1__","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_request","_request2","_cheerio","_cheerio2","_bluebird","_bluebird2","WIKI_RANDOM","WIKI_API","factLengthLimit","preload","preloadedFact","getRandomFact","_this","preloading","arguments","length","undefined","resolve","reject","sentFact","getRandomArticleTitle","then","articleTitle","titleQuery","split","join","error","response","body","statusCode","fact","json","JSON","parse","keys","query","pages","page","extract","factSplits","newFact","$","load","text"],"mappings":"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","file":"wikifakt.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"request\"), require(\"cheerio\"), require(\"bluebird\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"wikifakt\", [\"request\", \"cheerio\", \"bluebird\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wikifakt\"] = factory(require(\"request\"), require(\"cheerio\"), require(\"bluebird\"));\n\telse\n\t\troot[\"wikifakt\"] = factory(root[\"request\"], root[\"cheerio\"], root[\"bluebird\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"request\"), require(\"cheerio\"), require(\"bluebird\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"wikifakt\", [\"request\", \"cheerio\", \"bluebird\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wikifakt\"] = factory(require(\"request\"), require(\"cheerio\"), require(\"bluebird\"));\n\telse\n\t\troot[\"wikifakt\"] = factory(root[\"request\"], root[\"cheerio\"], root[\"bluebird\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _request = __webpack_require__(1);\n\t\n\tvar _request2 = _interopRequireDefault(_request);\n\t\n\tvar _cheerio = __webpack_require__(2);\n\t\n\tvar _cheerio2 = _interopRequireDefault(_cheerio);\n\t\n\tvar _bluebird = __webpack_require__(3);\n\t\n\tvar _bluebird2 = _interopRequireDefault(_bluebird);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar WIKI_RANDOM = 'https://en.wikipedia.org/wiki/Special:Random';\n\tvar WIKI_API = 'https://en.wikipedia.org/w/api.php?format=json&action=query&prop=extracts&exintro=&explaintext=&titles=';\n\t\n\texports.default = {\n\t    factLengthLimit: 200,\n\t    preload: true,\n\t    preloadedFact: '',\n\t\n\t    getRandomFact: function getRandomFact() {\n\t        var _this = this;\n\t\n\t        var preloading = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];\n\t\n\t        return new _bluebird2.default(function (resolve, reject) {\n\t            var sentFact = false;\n\t            if (_this.preload && _this.preloadedFact !== '') {\n\t                sentFact = true;\n\t                resolve(_this.preloadedFact);\n\t                _this.preloadedFact = '';\n\t            }\n\t\n\t            _this.getRandomArticleTitle().then(function (articleTitle) {\n\t                var titleQuery = articleTitle.split(' ').join('%20');\n\t                (0, _request2.default)(WIKI_API + titleQuery, function (error, response, body) {\n\t                    if (!error && response.statusCode === 200 && body !== '') {\n\t                        var json = JSON.parse(body);\n\t                        var keys = Object.keys(json.query.pages);\n\t                        if (keys.length === 0) {\n\t                            return _this.getRandomFact();\n\t                        } else {\n\t                            var page = json.query.pages[keys[0]];\n\t                            var fact = page.extract;\n\t                            if (!fact || fact === '') {\n\t                                _this.getRandomFact(preloading).then(function (newFact) {\n\t                                    resolve(newFact);\n\t                                });\n\t                            } else {\n\t                                if (fact.length > _this.factLengthLimit) {\n\t                                    var factSplits = fact.split('.');\n\t                                    fact = factSplits[0] += '.';\n\t                                    if (fact.length < _this.factLengthLimit && factSplits.length > 1) {\n\t                                        fact += factSplits[1] + '.';\n\t                                    }\n\t                                }\n\t\n\t                                // already returned a fact\n\t                                // save new fact in preload\n\t                                if (sentFact) {\n\t                                    _this.preloadedFact = fact;\n\t                                } else {\n\t                                    resolve(fact);\n\t\n\t                                    // if we want to preload a fact for next time\n\t                                    // and we arent currently preloading one\n\t                                    // then get a new fact and cache it in preloadedFact field\n\t                                    if (!preloading && _this.preload && _this.preloadedFact === '') {\n\t                                        _this.getRandomFact(true).then(function (newFact) {\n\t                                            _this.preloadedFact = newFact;\n\t                                        });\n\t                                    }\n\t                                }\n\t                            }\n\t                        }\n\t                    } else {\n\t                        if (!sentFact) {\n\t                            // there was an error fetching from wikipedia api\n\t                            // just try again\n\t                            _this.getRandomFact(preloading).then(function (fact) {\n\t                                resolve(fact);\n\t                            });\n\t                        }\n\t                    }\n\t                });\n\t            });\n\t        });\n\t    },\n\t\n\t    getRandomArticleTitle: function getRandomArticleTitle() {\n\t        return new _bluebird2.default(function (resolve, reject) {\n\t            (0, _request2.default)(WIKI_RANDOM, function (error, response, body) {\n\t                if (!error && response.statusCode === 200) {\n\t                    var $ = _cheerio2.default.load(body);\n\t                    var articleTitle = $('#firstHeading').text();\n\t                    resolve(articleTitle);\n\t                } else {\n\t                    reject(error);\n\t                }\n\t            });\n\t        });\n\t    }\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** wikifakt.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7f77aab856576591a569\n **/","import request from 'request';\nimport cheerio from 'cheerio';\nimport Promise from 'bluebird';\n\nconst WIKI_RANDOM = 'https://en.wikipedia.org/wiki/Special:Random';\nconst WIKI_API = 'https://en.wikipedia.org/w/api.php?format=json&action=query&prop=extracts&exintro=&explaintext=&titles=';\n\nexport default {\n    factLengthLimit: 200,\n    preload: true,\n    preloadedFact: '',\n\n    getRandomFact: function(preloading = false) {\n        return new Promise((resolve, reject) => {\n            let sentFact = false;\n            if (this.preload && this.preloadedFact !== '') {\n                sentFact = true;\n                resolve(this.preloadedFact);\n                this.preloadedFact = '';\n            }\n\n            this.getRandomArticleTitle().then((articleTitle) => {\n                let titleQuery = articleTitle.split(' ').join('%20');\n                request(WIKI_API + titleQuery, (error, response, body) => {\n                    if (!error && response.statusCode === 200 && body !== '') {\n                        let json = JSON.parse(body);\n                        let keys = Object.keys(json.query.pages);\n                        if (keys.length === 0) {\n                            return this.getRandomFact();\n                        } else {\n                            let page = json.query.pages[keys[0]];\n                            let fact = page.extract;\n                            if (!fact || fact === '') {\n                                this.getRandomFact(preloading).then((newFact) => {\n                                    resolve(newFact);\n                                });\n                            } else {\n                                if (fact.length > this.factLengthLimit) {\n                                    let factSplits = fact.split('.');\n                                    fact = factSplits[0] += '.';\n                                    if (fact.length < this.factLengthLimit && factSplits.length > 1) {\n                                        fact += factSplits[1] + '.';\n                                    }\n                                }\n\n                                // already returned a fact\n                                // save new fact in preload\n                                if (sentFact) {\n                                    this.preloadedFact = fact;\n                                } else {\n                                    resolve(fact);\n\n                                    // if we want to preload a fact for next time\n                                    // and we arent currently preloading one\n                                    // then get a new fact and cache it in preloadedFact field\n                                    if (!preloading && this.preload && this.preloadedFact === '') {\n                                        this.getRandomFact(true).then((newFact) => {\n                                            this.preloadedFact = newFact;\n                                        });\n                                    }\n                                }\n                            }\n                        }\n                    } else {\n                        if (!sentFact) {\n                            // there was an error fetching from wikipedia api\n                            // just try again\n                            this.getRandomFact(preloading).then((fact) => {\n                                resolve(fact);\n                            });\n                        }\n                    }\n                });\n            });\n        });\n    },\n\n    getRandomArticleTitle: function() {\n        return new Promise((resolve, reject) => {\n            request(WIKI_RANDOM, (error, response, body) => {\n                if (!error && response.statusCode === 200) {\n                    let $ = cheerio.load(body);\n                    let articleTitle = $('#firstHeading').text();\n                    resolve(articleTitle);\n                } else {\n                    reject(error);\n                }\n            });\n        });\n    }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/index.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"request\"\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"cheerio\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"bluebird\"\n ** module id = 3\n ** module chunks = 0\n **/"],"sourceRoot":""}